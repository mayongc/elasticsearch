[[query-dsl-terms-query]]
=== Terms Query

能和提供的任何一个词（*未分析*）匹配。例如：

[source,js]
--------------------------------------------------
GET /_search
{
    "query": {
        "terms" : { "user" : ["kimchy", "elasticsearch"]}
    }
}
--------------------------------------------------
// CONSOLE

NOTE: 高亮显示的 `terms` 查询是最优的，但是 `terms` 查询的词也可能不会高亮显示，
这取决于选择的高亮实现和 `terms` 查询中词的数量。

[float]
[[query-dsl-terms-lookup]]
===== 词查找机制

当需要指定一个带有很多词的 `terms` 过滤器时，有利于从索引的文档中获取这些词的值。
一个具体的例子是过滤你的粉丝发推特的推文。词过滤器中指定的用户ID的数量可能很多。
在这种情况下，使用词过滤器的词查找机制是有意义的。

词查找机制支持以下选项：

[horizontal]
`index`::
    从中获取词的值的索引。

`type`::
    从中获取词的值的类型。

`id`::
    从中获取词的值的文档的ID。

`path`::
    该字段指定为获取 `terms` 过滤器的实际值的路径。

`routing`::
    当检索外部的词的文档时要使用的自定义路由值。

`terms` 过滤器的值将从指定的索引和类型中指定ID的文档中的字段中获取。
在内部执行get请求从指定路径获取值。要使此功能正常工作，需要存储 `_source`。

此外，如果 "reference" 词数据不大，请考虑使用单分片的索引，并在所有节点上完全复制索引。
如果可能的话，查找词过滤器更愿意在本地节点执行get请求，从而减少对网络的需求。

[WARNING]
执行很多词的词查询请求可能非常慢，因为每增加一个词都需要额外的处理和内存。
为防止这种情况的发生，词查询中可以使用的词的最大数量被限制为 `65536`。
使用索引的 `index.max_terms_count` 设置可以改变特定索引的默认最大值。

[float]
===== 词查找推特的例子
首先，我们为ID为2的用户创建其关注者的索引信息，然后为ID为1的用户创建推文索引。最后，
我们搜索用户2的关注者的所有推文。

[source,js]
--------------------------------------------------
PUT /users/_doc/2
{
    "followers" : ["1", "3"]
}

PUT /tweets/_doc/1
{
    "user" : "1"
}

GET /tweets/_search
{
    "query" : {
        "terms" : {
            "user" : {
                "index" : "users",
                "type" : "_doc",
                "id" : "2",
                "path" : "followers"
            }
        }
    }
}
--------------------------------------------------
// CONSOLE

外部词文档的结构也可以包含一个内部对象的数组，例如：

[source,js]
--------------------------------------------------
PUT /users/_doc/2
{
 "followers" : [
   {
     "id" : "1"
   },
   {
     "id" : "2"
   }
 ]
}
--------------------------------------------------
// CONSOLE

在这种情况下，查找路径是 `followers.id`。
